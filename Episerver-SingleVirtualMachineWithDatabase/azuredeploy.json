{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "storageType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_ZRS",
        "Standard_GRS",
        "Standard_RAGRS",
        "Premium_LRS"
      ]
    },
    "vmName": {
      "type": "string",
      "minLength": 1
    },        
    "vmAdminPassword": {
      "type": "securestring"
    },
    "vmWindowsOSVersion": {
      "type": "string",
      "defaultValue": "2016-Datacenter",
      "allowedValues": [
        "2008-R2-SP1",
        "2012-Datacenter",
        "2012-R2-Datacenter",
        "Windows-Server-Technical-Preview",
        "2016-Datacenter"
      ]
    },
    "vmSize": {
      "type": "string",
      "minLength": 1
    },    
    "storagename": {
      "type": "string",
      "minLength": 1
    },        
    "sqlAdminPassword": {
      "type": "securestring"
    },    
    "omsWorkspaceId": {
      "type": "string",
      "minLength": 1
    },
    "omsWorkspaceKey": {
      "type": "securestring",
      "minLength": 1
    }
  },
  "variables": {
    "Vnet1Prefix": "10.0.0.0/16",
    "Vnet1Subnet1Name": "Subnet-1",
    "Vnet1Subnet1Prefix": "10.0.0.0/24",
    "Vnet1Subnet2Name": "Subnet-2",
    "Vnet1Subnet2Prefix": "10.0.1.0/24",
    "VmImage": "MicrosoftWindowsServer",
    "VmImageOffer": "WindowsServer",
    "VnetName": "Vnet1",
    "VnetId": "[resourceId('Microsoft.Network/virtualNetworks', variables('VnetName'))]",
    "VnetSubnetRef": "[concat(variables('VnetId'), '/subnets/', variables('Vnet1Subnet1Name'))]",
    "StorageAccountContainerName": "vhds",
    "NicName": "[concat(parameters('vmName'), 'NetworkInterface')]",
    "vmPublicIpName":"[concat(parameters('vmName'), 'PIP')]",    
    "vmOsDiskName":"[concat(parameters('vmName'), 'OSDisk')]",    
    "frontEndNSGName":"[concat(parameters('vmName'), 'nsg')]",    
    "nsgRestriction":"195.8.193.195",   
    "vmAdminUsername":"[concat('captain', parameters('vmName'))]",    
    "sqlServerName":"[concat(parameters('vmName'), 'sqlserver')]",    
    "sqlAdminUsername":"Chancellor"
  },
  "resources": [
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('frontEndNSGName')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "NSG - Front End"
      },
      "properties": {
        "securityRules": [
          {
            "name": "rdp-rule",
            "properties": {
              "description": "Allow RDP",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "[variables('nsgRestriction')]",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          },
          {
            "name": "web-rule",
            "properties": {
              "description": "Allow WEB",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "80",
              "sourceAddressPrefix": "[variables('nsgRestriction')]",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 120,
              "direction": "Inbound"
            }
          },
          {
            "name": "ssl-rule",
            "properties": {
              "description": "Allow SSL",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "443",
              "sourceAddressPrefix": "[parameters('nsgRestriction')]",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 130,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "name": "[variables('VnetName')]",
      "type": "Microsoft.Network/virtualNetworks",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-03-30",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('frontEndNSGName'))]"
      ],
      "tags": {
        "displayName": "Vnet1"
      },
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('Vnet1Prefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('Vnet1Subnet1Name')]",
            "properties": {
              "addressPrefix": "[variables('Vnet1Subnet1Prefix')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('frontEndNSGName'))]"
              }
            }
          },
          {
            "name": "[variables('Vnet1Subnet2Name')]",
            "properties": {
              "addressPrefix": "[variables('Vnet1Subnet2Prefix')]"
            }
          }
        ]
      }
    },
    {
      "name": "[parameters('storagename')]",
      "type": "Microsoft.Storage/storageAccounts",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-01-01",
      "sku": {
        "name": "[parameters('storageType')]"
      },
      "dependsOn": [],
      "tags": {
        "displayName": "storage"
      },
      "kind": "Storage"
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('vmPublicIpName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "Static",
        "dnsSettings": {
          "domainNameLabel": "[variables('vmDomainNameLabel')]"
        }
      },
      "tags": {
        "displayName": "PublicIPAddress - Web"
      }
    },
    {
      "name": "[variables('NicName')]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-03-30",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', variables('VnetName'))]"
      ],
      "tags": {
        "displayName": "networkinterface"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('vmPublicIpName'))]"
              },
              "subnet": {
                "id": "[variables('VnetSubnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "name": "[parameters('vmName')]",
      "type": "Microsoft.Compute/virtualMachines",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storagename'))]",
        "[resourceId('Microsoft.Network/networkInterfaces', variables('NicName'))]"
      ],
      "tags": {
        "displayName": "virtualmachine"
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('vmName')]",
          "adminUsername": "[variables('vmAdminUsername')]",
          "adminPassword": "[parameters('vmAdminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('VmImage')]",
            "offer": "[variables('VmImageOffer')]",
            "sku": "[parameters('vmWindowsOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "[parameters('vmOsDiskName')]",
            "vhd": {
              "uri": "[concat(reference(resourceId('Microsoft.Storage/storageAccounts', parameters('storagename')), '2016-01-01').primaryEndpoints.blob, variables('StorageAccountContainerName'), '/', variables('vmOsDiskName'), '.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('NicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[concat('http://',parameters('storagename'),'.blob.core.windows.net')]"
          }
        }
      },
      "resources": 
      [
        {
          "type": "extensions",
          "name": "Microsoft.EnterpriseCloud.Monitoring",
          "apiVersion": "2015-06-15",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'))]"
          ],
          "properties": {
            "publisher": "Microsoft.EnterpriseCloud.Monitoring",
            "type": "MicrosoftMonitoringAgent",
            "typeHandlerVersion": "1.0",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "workspaceId": "[parameters('omsWorkspaceId')]"
            },
            "protectedSettings": {
              "workspaceKey": "[parameters('omsWorkspaceKey')]"
            }
          }
        }
      ]    
    },
    {
      "name": "[variables('sqlServerName')]",
      "type": "Microsoft.Sql/servers",
      "location": "[resourceGroup().location]",
      "apiVersion": "2014-04-01-preview",
      "dependsOn": [],
      "tags": {
        "displayName": "SqlServer"
      },
      "properties": {
        "administratorLogin": "[variables('sqlAdminUsername')]",
        "administratorLoginPassword": "[parameters('sqlAdminPassword')]"
      },
      "resources": [
        {
          "name": "AllowAllWindowsAzureIps",
          "type": "firewallrules",
          "location": "[resourceGroup().location]",
          "apiVersion": "2014-04-01-preview",
          "dependsOn": [
            "[resourceId('Microsoft.Sql/servers', variables('sqlServerName'))]"
          ],
          "properties": {
            "startIpAddress": "0.0.0.0",
            "endIpAddress": "195.8.193.195"
          }
        }
      ]
    }
  ]
}